{
  "name": "RAG USS v2 carga",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "https://drive.google.com/drive/folders/1-zRT3-wl1w7c2b-zRMUQ2pijiUPErKJL",
          "mode": "url"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "09d549f4-8c51-4ab6-a6dc-eedf90d3251e",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dmF52TLikbBce5wh",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {
          "keepSource": "json"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1152,
        192
      ],
      "id": "a12205ca-5d87-4583-9cb7-d69db4651eb8",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "embpgvuss",
        "embeddingBatchSize": null,
        "options": {
          "columnNames": {
            "values": {
              "contentColumnName": "=text",
              "metadataColumnName": "=metadata"
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.1,
      "position": [
        1488,
        192
      ],
      "id": "dd7c6967-9018-4531-8282-e8c62755f102",
      "name": "Postgres PGVector Store",
      "credentials": {
        "postgres": {
          "id": "i01CnU9iyQR295AY",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1488,
        400
      ],
      "id": "b4a1cd43-c95f-46b3-85a7-a307ce459d03",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "r1fYX68YwJ5EOYOW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "archivo",
                "value": "={{$json.v_archivo}}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1664,
        464
      ],
      "id": "a77fbf8c-8e8f-43e9-9939-78e0117b0c6c",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 250,
        "options": {
          "splitCode": "markdown"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1632,
        592
      ],
      "id": "ba68d090-6ea6-414e-b55e-194c1fc4907f",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "jsCode": "const resultados = [];\n\nfor (const item of $input.all()) {\n  let texto = item.json.data;\n  if (typeof texto === 'string') {\n    texto = texto.replace(/[\\r\\n]+/g, \" \").trim();\n  }\n\n  const nombreArchivo = $input.first().json.name || \"archivo_desconocido.txt\";\n\n  resultados.push({\n    json: {\n      data: texto,\n      v_archivo: nombreArchivo\n    }\n  });\n}\n\nreturn resultados;\n\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1312,
        192
      ],
      "id": "d152adee-8342-4397-8761-f6591c58c771",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "17846c58-64c4-457b-91b9-89ec0534ab6a",
              "leftValue": "={{ $json.existe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        752,
        80
      ],
      "id": "b466770f-d36e-497c-8dc0-4e8394482055",
      "name": "If"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        192,
        0
      ],
      "id": "33ce8bb4-3f83-4b40-ada5-6aa1f0a6891f",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "433a00b4-3590-4953-afc4-70053bf18c42",
              "name": "name",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "1dfd39d5-34fd-4dcd-9315-e76663c84e7e",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        80
      ],
      "id": "5173280f-e18d-44fd-9e23-07e30d8ada27",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        944,
        192
      ],
      "id": "0745cf7b-f1b2-40c8-95d8-06d3ad636b2f",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "dmF52TLikbBce5wh",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  EXISTS (\n    SELECT 1\n    FROM embpgvuss\n    WHERE metadata->>'archivo' = $1\n  ) AS existe,\n  $1 AS name,\n  $2 AS id;",
        "options": {
          "queryReplacement": "=$1: {{$json[\"name\"]}}\n$2: {{ $json.id }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        560,
        80
      ],
      "id": "d28b90fb-ccab-45f5-97be-5b1a0449bb63",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "i01CnU9iyQR295AY",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres PGVector Store": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4a43c8ff-e014-49bd-8e03-302b6df0fc96",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "15390199fca15fc22a839f4e1097d7b0c8c5bb7e7274e8e190074f926e207707"
  },
  "id": "esnaudid9iKmyqn4",
  "tags": []
}